// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_extensions
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_cast
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "dart:isolate" show ReceivePort;
import "dart:ffi" as ffi;
import "package:jni/internal_helpers_for_jnigen.dart";
import "package:jni/jni.dart" as jni;

/// from: org.chromium.net.UploadDataProviders
class UploadDataProviders extends jni.JObject {
  @override
  late final jni.JObjType<UploadDataProviders> $type = type;

  UploadDataProviders.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  static final _class =
      jni.Jni.findJClass(r"org/chromium/net/UploadDataProviders");

  /// The type which includes information such as the signature of this class.
  static const type = $UploadDataProvidersType();
  static final _id_create = jni.Jni.accessors.getStaticMethodIDOf(
      _class.reference,
      r"create",
      r"(Ljava/io/File;)Lorg/chromium/net/UploadDataProvider;");

  /// from: static public org.chromium.net.UploadDataProvider create(java.io.File file)
  /// The returned object must be deleted after use, by calling the `delete` method.
  static jni.JObject create(
    jni.JObject file,
  ) {
    return const jni.JObjectType().fromRef(jni.Jni.accessors
        .callStaticMethodWithArgs(_class.reference, _id_create,
            jni.JniCallType.objectType, [file.reference]).object);
  }

  static final _id_create1 = jni.Jni.accessors.getStaticMethodIDOf(
      _class.reference,
      r"create",
      r"(Landroid/os/ParcelFileDescriptor;)Lorg/chromium/net/UploadDataProvider;");

  /// from: static public org.chromium.net.UploadDataProvider create(android.os.ParcelFileDescriptor parcelFileDescriptor)
  /// The returned object must be deleted after use, by calling the `delete` method.
  static jni.JObject create1(
    jni.JObject parcelFileDescriptor,
  ) {
    return const jni.JObjectType().fromRef(jni.Jni.accessors
        .callStaticMethodWithArgs(
            _class.reference,
            _id_create1,
            jni.JniCallType.objectType,
            [parcelFileDescriptor.reference]).object);
  }

  static final _id_create2 = jni.Jni.accessors.getStaticMethodIDOf(
      _class.reference,
      r"create",
      r"(Ljava/nio/ByteBuffer;)Lorg/chromium/net/UploadDataProvider;");

  /// from: static public org.chromium.net.UploadDataProvider create(java.nio.ByteBuffer byteBuffer)
  /// The returned object must be deleted after use, by calling the `delete` method.
  static jni.JObject create2(
    jni.JObject byteBuffer,
  ) {
    return const jni.JObjectType().fromRef(jni.Jni.accessors
        .callStaticMethodWithArgs(_class.reference, _id_create2,
            jni.JniCallType.objectType, [byteBuffer.reference]).object);
  }

  static final _id_create3 = jni.Jni.accessors.getStaticMethodIDOf(
      _class.reference,
      r"create",
      r"([BII)Lorg/chromium/net/UploadDataProvider;");

  /// from: static public org.chromium.net.UploadDataProvider create(byte[] bs, int i, int i1)
  /// The returned object must be deleted after use, by calling the `delete` method.
  static jni.JObject create3(
    jni.JArray<jni.jbyte> bs,
    int i,
    int i1,
  ) {
    return const jni.JObjectType().fromRef(jni.Jni.accessors
        .callStaticMethodWithArgs(
            _class.reference,
            _id_create3,
            jni.JniCallType.objectType,
            [bs.reference, jni.JValueInt(i), jni.JValueInt(i1)]).object);
  }

  static final _id_create4 = jni.Jni.accessors.getStaticMethodIDOf(
      _class.reference,
      r"create",
      r"([B)Lorg/chromium/net/UploadDataProvider;");

  /// from: static public org.chromium.net.UploadDataProvider create(byte[] bs)
  /// The returned object must be deleted after use, by calling the `delete` method.
  static jni.JObject create4(
    jni.JArray<jni.jbyte> bs,
  ) {
    return const jni.JObjectType().fromRef(jni.Jni.accessors
        .callStaticMethodWithArgs(_class.reference, _id_create4,
            jni.JniCallType.objectType, [bs.reference]).object);
  }
}

class $UploadDataProvidersType extends jni.JObjType<UploadDataProviders> {
  const $UploadDataProvidersType();

  @override
  String get signature => r"Lorg/chromium/net/UploadDataProviders;";

  @override
  UploadDataProviders fromRef(jni.JObjectPtr ref) =>
      UploadDataProviders.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($UploadDataProvidersType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($UploadDataProvidersType) &&
        other is $UploadDataProvidersType;
  }
}
