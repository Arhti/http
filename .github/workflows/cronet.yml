name: package:cronet_http CI

on:
  push:
    branches:
      - main
      - master
    paths:
      - '.github/workflows/cronet.yaml'
      - 'pkgs/cronet_http/**'
      - 'pkgs/http_client_conformance_tests/**'
  pull_request:
    paths:
      - '.github/workflows/cronet.yaml'
      - 'pkgs/cronet_http/**'
      - 'pkgs/http_client_conformance_tests/**'
  schedule:
    - cron: "0 0 * * 0"

env:
  PUB_ENVIRONMENT: bot.github

jobs:
  verify:
    name: Format & Analyze & Test
    runs-on: macos-latest
    strategy:
      matrix:
        package: ['cronet_http', 'cronet_http_embedded']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Make cronet_http_embedded copy
        if: ${{ matrix.package == 'cronet_http_embedded' }}
        run: |
          cp -r pkgs/cronet_http pkgs/cronet_http_embedded
          cd pkgs/cronet_http_embedded
          flutter pub get && dart tool/prepare_for_embedded.dart
      - id: install
        name: Install dependencies
        working-directory: 'pkgs/${{ matrix.package }}'
        run: flutter pub get
      - name: Check formatting
        working-directory: 'pkgs/${{ matrix.package }}'
        run: dart format --output=none --set-exit-if-changed .
        if: always() && steps.install.outcome == 'success'
      - name: Analyze code
        working-directory: 'pkgs/${{ matrix.package }}'
        run: flutter analyze --fatal-infos
        if: always() && steps.install.outcome == 'success'
      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        if: always() && steps.install.outcome == 'success'
        with:
          # This should match the minSdkVersion in
          # pkgs/cronet_http/android/build.gradle.
          api-level: 21
          target: ${{ matrix.package == 'cronet_http_embedded' && 'google_apis' || 'playstore' }}
          arch: x86_64
          profile: pixel
          script: cd 'pkgs/${{ matrix.package }}/example' && flutter test --timeout=1200s integration_test/
